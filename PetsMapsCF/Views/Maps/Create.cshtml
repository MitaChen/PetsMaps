@model PetsMapsCF.Models.Maps

@{
    ViewBag.Title = "建立地圖資料";
}

<h3 class="managertitle align-content-center">
    <img src="~/Photos/cheese.png" style="width:2.5vw;height:2.5vw">　建立地圖資料
</h3>

@using (Html.BeginForm("Create", "Maps", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container p-5 createform">
        <div class="form">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MapID)
            @*<div class="form-group">
            @Html.LabelFor(model => model.MapID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MapID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MapID, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <div class="container">
                <div class="row">
                    <div class="col-4">
                        @Html.LabelFor(model => model.MapName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MapName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MapName, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-4">
                        @Html.LabelFor(model => model.MapTel, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MapTel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MapTel, "", new { @class = "text-danger" })
                    </div>

                    <div class="w-100"></div>

                    <div class="col-4 mt-2">
                        @Html.LabelFor(model => model.MapCity, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MapCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MapCity, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-4 mt-2">
                        @Html.LabelFor(model => model.MapDistrict, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MapDistrict, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MapDistrict, "", new { @class = "text-danger" })
                    </div>

                    <div class="w-100"></div>

                    <div class="col-8 mt-2">
                        @Html.LabelFor(model => model.MapAddress, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MapAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MapAddress, "", new { @class = "text-danger" })
                    </div>

                    <div class="w-100"></div>

                    <div class="col-8 mt-2">
                        @Html.LabelFor(model => model.MapInfo, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.MapInfo, new { @class = "form-control", rows = "10" })
                        @*<textarea class="form-control" id="MapInfo" rows="3"></textarea>*@
                        @*@if (@Model.MapInfo != null) {
                        @Html.Raw(Model.MapInfo.ToString().Replace("\n","<br/>"))
                    }*@
                        @Html.ValidationMessageFor(model => model.MapInfo, "", new { @class = "text-danger" })
                    </div>

                    <div class="w-100"></div>

                    <div class="col-8 mt-2">
                        @Html.LabelFor(model => model.MapImg, htmlAttributes: new { @class = "control-label" })
                        @*@Html.EditorFor(model => model.MapImg, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input id="photo" type="file" class="form-control" name="photo" />

                        @Html.ValidationMessageFor(model => model.MapImg, "", new { @class = "text-danger" })
                    </div>

                    <div class="w-100"></div>

                    <div class="col-8 form-group justify-content-center mt-3">
                        <input type="submit" value="新增" class="btn btn-primary" />
                        @Html.ActionLink("返回地圖資料列表", "Index", new { }, new { @class = "btn btn-primary" })
                    </div>

                </div>
            </div>
        </div>
    </div>

 
    @*<div class="my-selector-c">
            <div class="form-control">
                <select class="county"></select>
            </div>
            <div>
                <select class="district form-control"></select>
            </div>
        </div>*@


    @*<div class="custom-file mb-3">
            <input type="file" class="custom-file-input" id="validatedCustomFile" required>
            <label class="custom-file-label" for="validatedCustomFile">Choose file...</label>
               <label class="custom-file-label form-control" for="validatedCustomFile">選擇檔案</label>
            <div class="invalid-feedback">Example invalid custom file feedback</div>
        </div>*@


}


<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

